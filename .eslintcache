[{"D:\\IT-Kamasutra\\social-network\\src\\reportWebVitals.js":"1","D:\\IT-Kamasutra\\social-network\\src\\App.js":"2","D:\\IT-Kamasutra\\social-network\\src\\index.js":"3","D:\\IT-Kamasutra\\social-network\\src\\Components\\Header\\Header.jsx":"4","D:\\IT-Kamasutra\\social-network\\src\\Components\\News\\News.jsx":"5","D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\Dialogs.jsx":"6","D:\\IT-Kamasutra\\social-network\\src\\Components\\Navbar\\Navbar.jsx":"7","D:\\IT-Kamasutra\\social-network\\src\\Components\\Music\\Music.jsx":"8","D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\Profile.jsx":"9","D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"10","D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\MyPosts.jsx":"11","D:\\IT-Kamasutra\\social-network\\src\\Components\\Settings\\Settings.jsx":"12","D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\Message\\Mesage.jsx":"13","D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\Post\\Post.jsx":"14","D:\\IT-Kamasutra\\social-network\\src\\redux\\store.js":"15","D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\DialogItem\\DialogItem.jsx":"16","D:\\IT-Kamasutra\\social-network\\src\\redux\\dialog-reducer.js":"17","D:\\IT-Kamasutra\\social-network\\src\\redux\\profile-reducer.js":"18","D:\\IT-Kamasutra\\social-network\\src\\redux\\redux-store.js":"19","D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.jsx":"20","D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\DialogsContainer.jsx":"21","D:\\IT-Kamasutra\\social-network\\src\\redux\\users-reducer.js":"22","D:\\IT-Kamasutra\\social-network\\src\\Components\\Users\\UsersContainer.jsx":"23","D:\\IT-Kamasutra\\social-network\\src\\Components\\Users\\Users.jsx":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":1094,"mtime":1608924441700,"results":"27","hashOfConfig":"26"},{"size":557,"mtime":1608977978890,"results":"28","hashOfConfig":"26"},{"size":297,"mtime":1607856510775,"results":"29","hashOfConfig":"26"},{"size":175,"mtime":1607856510784,"results":"30","hashOfConfig":"26"},{"size":1260,"mtime":1608835157858,"results":"31","hashOfConfig":"26"},{"size":879,"mtime":1609000823512,"results":"32","hashOfConfig":"26"},{"size":180,"mtime":1607856510780,"results":"33","hashOfConfig":"26"},{"size":276,"mtime":1608661693572,"results":"34","hashOfConfig":"26"},{"size":464,"mtime":1607856510790,"results":"35","hashOfConfig":"26"},{"size":1081,"mtime":1608835225224,"results":"36","hashOfConfig":"26"},{"size":195,"mtime":1607856510791,"results":"37","hashOfConfig":"26"},{"size":196,"mtime":1607856510774,"results":"38","hashOfConfig":"26"},{"size":344,"mtime":1607856510786,"results":"39","hashOfConfig":"26"},{"size":1522,"mtime":1608151020809,"results":"40","hashOfConfig":"26"},{"size":337,"mtime":1607856781738,"results":"41","hashOfConfig":"26"},{"size":1356,"mtime":1608837526347,"results":"42","hashOfConfig":"26"},{"size":1170,"mtime":1608838615414,"results":"43","hashOfConfig":"26"},{"size":418,"mtime":1608914945350,"results":"44","hashOfConfig":"26"},{"size":1651,"mtime":1608749504470,"results":"45","hashOfConfig":"26"},{"size":1697,"mtime":1608748939978,"results":"46","hashOfConfig":"26"},{"size":1311,"mtime":1608978337383,"results":"47","hashOfConfig":"26"},{"size":664,"mtime":1608975682940,"results":"48","hashOfConfig":"26"},{"size":1511,"mtime":1609003239891,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18q3qq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\IT-Kamasutra\\social-network\\src\\reportWebVitals.js",[],["106","107"],"D:\\IT-Kamasutra\\social-network\\src\\App.js",[],"D:\\IT-Kamasutra\\social-network\\src\\index.js",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Header\\Header.jsx",[],["108","109"],"D:\\IT-Kamasutra\\social-network\\src\\Components\\News\\News.jsx",[],["110","111"],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\Dialogs.jsx",[],["112","113"],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Navbar\\Navbar.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Music\\Music.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\Profile.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\MyPosts.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Settings\\Settings.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\Message\\Mesage.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\Post\\Post.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\redux\\store.js",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\redux\\dialog-reducer.js",["114"],"const ADD_MESSAGE = 'ADD-MESSAGE'; //ADD = SEND\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'; //TEXT == BODY\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Victor'},\r\n        {id: 6, name: 'Valera'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How is your React learning?'},\r\n        {id: 3, message: 'Good! ;)'},\r\n    ],\r\n    newMessageText: '',\r\n}\r\nexport const dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [...state.messages, {id: 20, message: state.newMessageText}],\r\n            };\r\n        }\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newMessageText,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE});\r\nexport const updateNewMessageTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_MESSAGE_TEXT, newMessageText: text});\r\n\r\nexport default dialogReducer;","D:\\IT-Kamasutra\\social-network\\src\\redux\\profile-reducer.js",["115"],"D:\\IT-Kamasutra\\social-network\\src\\redux\\redux-store.js",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.jsx",["116"],"import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// delete in L46 or latter\r\n// const MyPostsContainer = () => {\r\n//     // debugger;\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//\r\n//                 let state = store.getState();\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostActionCreator());\r\n//                 }\r\n//                 let onPostChange = (text) => {\r\n//                     let action = updateNewPostTextActionCreator(text);\r\n//                     store.dispatch(action);\r\n//                 }\r\n//\r\n//                 return <MyPosts updateNewPostText={onPostChange}\r\n//                                 addPost={addPost}\r\n//                                 posts={state.profilePage.posts}\r\n//                                 newPostText={state.profilePage.newPostText}/>\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\DialogsContainer.jsx",["117"],"import React from 'react';\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// delete in L46 or latter\r\n// const DialogsContainer = () => {\r\n    // debugger;\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState().dialogsPage;\r\n//                 let addMessage = () => {\r\n//                     store.dispatch(addMessageActionCreator());\r\n//                 }\r\n//                 let onMessageChange = (text) => {\r\n//                     let action = updateNewMessageTextActionCreator(text)\r\n//                     store.dispatch(action);\r\n//                 }\r\n//\r\n//                 return <Dialogs updateNewMessageText={onMessageChange}\r\n//                                 addMessage={addMessage}\r\n//                                 dialogPage={state}\r\n//                                 newMessageText={state.newMessageText}/>\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    // debugger\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator());\r\n        },\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer;","D:\\IT-Kamasutra\\social-network\\src\\redux\\users-reducer.js",["118"],"const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\n\r\nlet initialState = {\r\n    users: []\r\n};\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            // return { ...state, users: [...state.users, ...action.users] }\r\n            return { ...state, users: action.users }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n\r\n}\r\nexport const followAC = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\r\n\r\nexport default usersReducer;","D:\\IT-Kamasutra\\social-network\\src\\Components\\Users\\UsersContainer.jsx",["119"],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Users\\Users.jsx",["120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"121","replacedBy":"127"},{"ruleId":"123","replacedBy":"128"},{"ruleId":"121","replacedBy":"129"},{"ruleId":"123","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":39,"column":5,"nodeType":"133","messageId":"134","endLine":39,"endColumn":18},{"ruleId":"131","severity":1,"message":"132","line":36,"column":5,"nodeType":"133","messageId":"134","endLine":36,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":39,"column":5,"nodeType":"133","messageId":"134","endLine":39,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":20,"column":25,"nodeType":"141","endLine":20,"endColumn":119},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],["142"],["143"],["142"],["143"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]