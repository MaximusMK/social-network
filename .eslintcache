[{"D:\\IT-Kamasutra\\social-network\\src\\reportWebVitals.js":"1","D:\\IT-Kamasutra\\social-network\\src\\App.js":"2","D:\\IT-Kamasutra\\social-network\\src\\index.js":"3","D:\\IT-Kamasutra\\social-network\\src\\Components\\Header\\Header.jsx":"4","D:\\IT-Kamasutra\\social-network\\src\\Components\\News\\News.jsx":"5","D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\Dialogs.jsx":"6","D:\\IT-Kamasutra\\social-network\\src\\Components\\Navbar\\Navbar.jsx":"7","D:\\IT-Kamasutra\\social-network\\src\\Components\\Music\\Music.jsx":"8","D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\Profile.jsx":"9","D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"10","D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\MyPosts.jsx":"11","D:\\IT-Kamasutra\\social-network\\src\\Components\\Settings\\Settings.jsx":"12","D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\Message\\Mesage.jsx":"13","D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\Post\\Post.jsx":"14","D:\\IT-Kamasutra\\social-network\\src\\redux\\store.js":"15","D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\DialogItem\\DialogItem.jsx":"16","D:\\IT-Kamasutra\\social-network\\src\\redux\\dialog-reducer.js":"17","D:\\IT-Kamasutra\\social-network\\src\\redux\\profile-reducer.js":"18","D:\\IT-Kamasutra\\social-network\\src\\redux\\redux-store.js":"19","D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.jsx":"20","D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\DialogsContainer.jsx":"21","D:\\IT-Kamasutra\\social-network\\src\\redux\\users-reducer.js":"22","D:\\IT-Kamasutra\\social-network\\src\\Components\\Users\\UsersContainer.jsx":"23","D:\\IT-Kamasutra\\social-network\\src\\Components\\Users\\Users.jsx":"24","D:\\IT-Kamasutra\\social-network\\src\\Components\\common\\Preloader\\Preloader.js":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":1094,"mtime":1608924441700,"results":"28","hashOfConfig":"27"},{"size":557,"mtime":1609179957680,"results":"29","hashOfConfig":"27"},{"size":297,"mtime":1607856510775,"results":"30","hashOfConfig":"27"},{"size":175,"mtime":1607856510784,"results":"31","hashOfConfig":"27"},{"size":1260,"mtime":1608835157858,"results":"32","hashOfConfig":"27"},{"size":879,"mtime":1609000823512,"results":"33","hashOfConfig":"27"},{"size":180,"mtime":1607856510780,"results":"34","hashOfConfig":"27"},{"size":332,"mtime":1609185090003,"results":"35","hashOfConfig":"27"},{"size":464,"mtime":1607856510790,"results":"36","hashOfConfig":"27"},{"size":1081,"mtime":1608835225224,"results":"37","hashOfConfig":"27"},{"size":195,"mtime":1607856510791,"results":"38","hashOfConfig":"27"},{"size":196,"mtime":1607856510774,"results":"39","hashOfConfig":"27"},{"size":344,"mtime":1607856510786,"results":"40","hashOfConfig":"27"},{"size":1522,"mtime":1608151020809,"results":"41","hashOfConfig":"27"},{"size":337,"mtime":1607856781738,"results":"42","hashOfConfig":"27"},{"size":1356,"mtime":1608837526347,"results":"43","hashOfConfig":"27"},{"size":1170,"mtime":1608838615414,"results":"44","hashOfConfig":"27"},{"size":418,"mtime":1608914945350,"results":"45","hashOfConfig":"27"},{"size":1651,"mtime":1608749504470,"results":"46","hashOfConfig":"27"},{"size":1697,"mtime":1608748939978,"results":"47","hashOfConfig":"27"},{"size":2146,"mtime":1609179281100,"results":"48","hashOfConfig":"27"},{"size":2861,"mtime":1609182148589,"results":"49","hashOfConfig":"27"},{"size":1728,"mtime":1609095885588,"results":"50","hashOfConfig":"27"},{"size":271,"mtime":1609183110493,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"18q3qq",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\IT-Kamasutra\\social-network\\src\\reportWebVitals.js",[],["112","113"],"D:\\IT-Kamasutra\\social-network\\src\\App.js",[],"D:\\IT-Kamasutra\\social-network\\src\\index.js",[],["114","115"],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Header\\Header.jsx",[],["116","117"],"D:\\IT-Kamasutra\\social-network\\src\\Components\\News\\News.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\Dialogs.jsx",[],["118","119"],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Navbar\\Navbar.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Music\\Music.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\Profile.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\MyPosts.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Settings\\Settings.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\Message\\Mesage.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\Post\\Post.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\redux\\store.js",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\redux\\dialog-reducer.js",["120"],"const ADD_MESSAGE = 'ADD-MESSAGE'; //ADD = SEND\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'; //TEXT == BODY\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Victor'},\r\n        {id: 6, name: 'Valera'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How is your React learning?'},\r\n        {id: 3, message: 'Good! ;)'},\r\n    ],\r\n    newMessageText: '',\r\n}\r\nexport const dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [...state.messages, {id: 20, message: state.newMessageText}],\r\n            };\r\n        }\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newMessageText,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE});\r\nexport const updateNewMessageTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_MESSAGE_TEXT, newMessageText: text});\r\n\r\nexport default dialogReducer;","D:\\IT-Kamasutra\\social-network\\src\\redux\\profile-reducer.js",["121"],"const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        // {id: 1, message: 'Hi, how are you?', likesCount: 15},\r\n        // {id: 2, message: \"it's my first post\", likesCount: 25},\r\n        {id: 3, message: \"Good\", likesCount: 3},\r\n    ],\r\n    newPostText: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 20,\r\n                message: state.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n\r\n            return {...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n\r\n}\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text});\r\n\r\nexport default profileReducer;","D:\\IT-Kamasutra\\social-network\\src\\redux\\redux-store.js",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.jsx",["122"],"import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// delete in L46 or latter\r\n// const MyPostsContainer = () => {\r\n//     // debugger;\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//\r\n//                 let state = store.getState();\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostActionCreator());\r\n//                 }\r\n//                 let onPostChange = (text) => {\r\n//                     let action = updateNewPostTextActionCreator(text);\r\n//                     store.dispatch(action);\r\n//                 }\r\n//\r\n//                 return <MyPosts updateNewPostText={onPostChange}\r\n//                                 addPost={addPost}\r\n//                                 posts={state.profilePage.posts}\r\n//                                 newPostText={state.profilePage.newPostText}/>\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","D:\\IT-Kamasutra\\social-network\\src\\Components\\Dialogs\\DialogsContainer.jsx",["123"],"import React from 'react';\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// delete in L46 or latter\r\n// const DialogsContainer = () => {\r\n    // debugger;\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState().dialogsPage;\r\n//                 let addMessage = () => {\r\n//                     store.dispatch(addMessageActionCreator());\r\n//                 }\r\n//                 let onMessageChange = (text) => {\r\n//                     let action = updateNewMessageTextActionCreator(text)\r\n//                     store.dispatch(action);\r\n//                 }\r\n//\r\n//                 return <Dialogs updateNewMessageText={onMessageChange}\r\n//                                 addMessage={addMessage}\r\n//                                 dialogPage={state}\r\n//                                 newMessageText={state.newMessageText}/>\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    // debugger\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator());\r\n        },\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text));\r\n        }\r\n    }\r\n}\r\n\r\nlet DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer;","D:\\IT-Kamasutra\\social-network\\src\\redux\\users-reducer.js",["124"],"const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 3,\r\n    totalUsersCount: 1,\r\n    currentPage: 3,\r\n    isFetching: true,\r\n\r\n};\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            // return { ...state, users: [...state.users, ...action.users] }\r\n            return { ...state, users: action.users }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport const followAC = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPageAC = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCountAC = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count:totalUsersCount});\r\nexport const toggleIsFetchingAC = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport default usersReducer;","D:\\IT-Kamasutra\\social-network\\src\\Components\\Users\\UsersContainer.jsx",[],"D:\\IT-Kamasutra\\social-network\\src\\Components\\Users\\Users.jsx",["125"],"import React from 'react';\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user1.png\"\r\n\r\nlet Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return  <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return  <span className={props.currentPage === p  && styles.selectedPage} //не понимаю выражение\r\n                              onClick={() => {props.onPageChanged(p);\r\n                              }}>{p}</span>\r\n            })\r\n            }\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                             className={styles.usersPhoto}/>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button onClick={() => { props.unfollow(u.id) }}>Unfollow</button>\r\n                            : <button onClick={() => { props.follow(u.id) }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","D:\\IT-Kamasutra\\social-network\\src\\Components\\common\\Preloader\\Preloader.js",["126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"127","replacedBy":"133"},{"ruleId":"129","replacedBy":"134"},{"ruleId":"127","replacedBy":"135"},{"ruleId":"129","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":39,"column":5,"nodeType":"139","messageId":"140","endLine":39,"endColumn":18},{"ruleId":"137","severity":1,"message":"138","line":36,"column":5,"nodeType":"139","messageId":"140","endLine":36,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":55,"column":5,"nodeType":"139","messageId":"140","endLine":55,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":26,"column":25,"nodeType":"147","endLine":27,"endColumn":61},{"ruleId":"145","severity":1,"message":"146","line":7,"column":9,"nodeType":"147","endLine":7,"endColumn":32},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],["148"],["149"],["148"],["149"],["148"],["149"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]